{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/format-utils.ts","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/gl-utils/matrix/vec3.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/converter.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/viewer.ts","webpack:///./src/ts/gl-utils/matrix/mat4.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","initGL","flags","setError","message","Page","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","this","_gl","GLResource","Format","guessFormat","image","FormatUtils","mayBeSkybox","Skybox","ratio","abs","Tinyplanet","Skysphere","parseString","str","format","context","document","createElement","drawImage","testedPixels","x","y","reference","getImageData","data","tested","sample","onChangeObservers","Array","callOnChangeObservers","Parameters","callback","onImageLoadObservers","FileControl","addUploadObserver","files","showLoader","reader","FileReader","onload","Image","src","result","readAsDataURL","inputFormat","outputFormat","onInputFormatChangeObservers","Tabs","addObserver","values","previous","outputPreview","fov","Checkbox","checked","showFrame","Range","newFov","PI","paddingTOP","paddingBottom","margin","paddingBack","rotateZ","flipVertically","Observers","mouseWheel","push","delta","img","addEventListener","removeErrorMessage","console","error","setValues","show","setChecked","getValues","setValue","getValue","css","type","innerHTML","body","appendChild","cachedShaders","buildShader","infos","sourcesPending","sourcesFailed","loadedSource","success","shader","vert","ShaderSources","getSource","vertexFilename","frag","fragmentFilename","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","deleteShader","freeGLResources","array","size","id","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","normalize","stride","offset","createQuad","minX","minY","maxX","maxY","VBO","Float32Array","FLOAT","deleteBuffer","location","enableVertexAttribArray","vertexAttribPointer","z","_val","dotProduct","v1","v2","crossProduct","Vec3","substract","equals","other","divideByScalar","scalar","norm","sqrt","length","resetEditControls","paddingTop","previewOutput","GlCanvas","alpha","preserveDrawingBuffer","viewer","converter","forceRedraw","addDownloadObserver","idealWidth","outputPercentage","pow","log","LOG2E","restoreCanvas","style","position","setFullCanvas","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","texture","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","href","URL","createObjectURL","click","previewViewport","requestAnimationFrame","mainLoop","update","needToRedraw","drawingBufferWidth","set","main","_vbo","u","use","bindUniformsAndAttributes","drawArrays","TRIANGLE_STRIP","vertex","fragment","ShaderManager","a","_shaderBoxToBox","_shaderBoxToSphere","_shaderBoxToPlanet","_shaderSphereToBox","_shaderSphereToSphere","_shaderSphereToPlanet","_shaderPlanetToBox","_shaderPlanetToSphere","_shaderPlanetToPlanet","Converter","notImplemented","alert","types","binder","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","forEach","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","ShaderProgram","cachedSources","filename","text","XMLHttpRequest","open","readyState","status","responseText","statusText","onerror","send","left","lower","viewport","drawingBufferHeight","Viewport","_eyePos","_vertical","_tmpMatrix","Mat4","_projToWorldMatrix","resetThetaPhi","_needToReloadImage","_needToRedraw","doNeedToRedraw","doNeedToReloadImage","newOne","canvasResize","mouseDrag","dX","dY","_phi","getAspectRatio","_theta","min","max","_texture","deleteTexture","_shaderSkybox","_shaderSkysphere","_shaderTinyplanet","splitAndLoadSkybox","loadTexture","recomputeMatrices","val","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","side","ceil","sidesStyles","target","TEXTURE_CUBE_MAP_POSITIVE_X","rotation","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","translate","scale","sourceWidth","sourceHeight","sideStyle","rotate","generateMipmap","LINEAR_MIPMAP_LINEAR","lookAt","sin","cos","invert","aspectRatio","perspectiveInverse","Infinity","multiplyRight","Viewer","identity","eye","center","up","m2","tmp","tmpMatrix","myself","iCol","iRow","swapWithTmpMatrix","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","tmpVals","perspective","fovy","nearPlane","farPlane","f","tan"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","enum Format {\r\n    Skybox = \"skybox\",\r\n    Skysphere = \"skysphere\",\r\n    Tinyplanet = \"tinyplanet\",\r\n}\r\n\r\nclass FormatUtils {\r\n    public static guessFormat(image: HTMLImageElement): Format {\r\n        if (FormatUtils.mayBeSkybox(image)) {\r\n            return Format.Skybox;\r\n        }\r\n\r\n        const ratio = image.width / image.height;\r\n        if (Math.abs(ratio - 1) < 0.1) {\r\n            return Format.Tinyplanet;\r\n        }\r\n\r\n        return Format.Skysphere;\r\n    }\r\n\r\n    public static parseString(str: string): Format {\r\n        if (str === Format.Skybox) {\r\n            return Format.Skybox;\r\n        } else if (str === Format.Tinyplanet) {\r\n            return Format.Tinyplanet;\r\n        } else {\r\n            return Format.Skysphere;\r\n        }\r\n    }\r\n\r\n    public static ratio(format: Format): number {\r\n        if (format === Format.Skybox) {\r\n            return 4 / 3;\r\n        } else if (format === Format.Skysphere) {\r\n            return 2;\r\n        } else /* if (format === Format.Tinyplanet) */ {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    private static mayBeSkybox(image: HTMLImageElement): boolean {\r\n        const context = document.createElement(\"canvas\").getContext(\"2d\");\r\n        context.canvas.width = 8;\r\n        context.canvas.height = 6;\r\n        context.drawImage(image, 0, 0, context.canvas.width, context.canvas.height);\r\n\r\n        const testedPixels = [\r\n            {x: 0, y: 0}, {x: 5, y: 0}, {x: 6, y: 0}, {x: 7, y: 0},   // top\r\n            {x: 0, y: 5}, {x: 5, y: 5}, {x: 6, y: 5}, {x: 7, y: 5},  // bottom\r\n        ];\r\n\r\n        const reference = context.getImageData(testedPixels[0].x, testedPixels[0].y, 1, 1).data;\r\n        for (const tested of testedPixels) {\r\n            const sample = context.getImageData(tested.x, tested.y, 1, 1).data;\r\n\r\n            for (let i = 0; i < 4; ++i) {\r\n                if (sample[i] !== reference[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private constructor() { }\r\n}\r\n\r\nexport {\r\n    Format,\r\n    FormatUtils,\r\n};\r\n","import { Format, FormatUtils } from \"./format-utils\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\ntype OnChangeCallback = () => void;\r\n\r\nconst onChangeObservers = new Array<OnChangeCallback>();\r\nfunction callOnChangeObservers(): void {\r\n    for (const callback of Parameters.onChangeObservers) {\r\n        callback();\r\n    }\r\n}\r\n\r\ntype OnImageLoadCallback = (img: HTMLImageElement) => void;\r\nconst onImageLoadObservers = new Array<OnImageLoadCallback>();\r\n\r\nlet image: HTMLImageElement;\r\n\r\nconst FILE_UPLOAD_CONTROL = \"file-upload-id\";\r\nPage.FileControl.addUploadObserver(FILE_UPLOAD_CONTROL, (files: FileList) => {\r\n    Page.Canvas.showLoader(true);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n        Parameters.image = new Image();\r\n        Parameters.image.src = reader.result as any;\r\n    };\r\n\r\n    reader.readAsDataURL(files[0]);\r\n});\r\n\r\ntype OnInputFormatChangeCallback = (previous: Format, newOne: Format) => void;\r\nconst onInputFormatChangeObservers = new Array<OnInputFormatChangeCallback>();\r\n\r\nlet inputFormat: Format;\r\nconst INPUT_FORMAT_CONTROL = \"input-format\";\r\nPage.Tabs.addObserver(INPUT_FORMAT_CONTROL, (values: string[]) => {\r\n    const previous = inputFormat;\r\n    inputFormat = FormatUtils.parseString(values[0]);\r\n\r\n    for (const callback of onInputFormatChangeObservers) {\r\n        callback(previous, inputFormat);\r\n    }\r\n});\r\n\r\nlet outputFormat: Format;\r\nconst OUTPUT_FORMAT_CONTROL = \"output-format\";\r\nPage.Tabs.addObserver(OUTPUT_FORMAT_CONTROL, (values: string[]) => {\r\n    outputFormat = FormatUtils.parseString(values[0]);\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet outputPreview: boolean;\r\nconst OUPUT_PREVIEW_CONTROL = \"output-preview-id\";\r\nPage.Checkbox.addObserver(OUPUT_PREVIEW_CONTROL, (checked: boolean) => {\r\n    outputPreview = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet fov: number;\r\nconst FOV_CONTROL = \"fov-range-id\";\r\nPage.Range.addObserver(FOV_CONTROL, (newFov: number) => {\r\n    fov = Math.PI / 180 * newFov;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet showFrame: boolean;\r\nconst FRAME_CONTROL = \"frame-checkbox-id\";\r\nPage.Checkbox.addObserver(FRAME_CONTROL, (checked: boolean) => {\r\n    showFrame = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingTOP: number;\r\nconst PADDING_TOP_CONTROL = \"padding-top-range-id\";\r\nPage.Range.addObserver(PADDING_TOP_CONTROL, (margin: number) => {\r\n    paddingTOP = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingBottom: number;\r\nconst PADDING_BOTTOM_CONTROL = \"padding-bottom-range-id\";\r\nPage.Range.addObserver(PADDING_BOTTOM_CONTROL, (margin: number) => {\r\n    paddingBottom = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingBack: number;\r\nconst PADDING_BACK_CONTROL = \"padding-back-range-id\";\r\nPage.Range.addObserver(PADDING_BACK_CONTROL, (margin: number) => {\r\n    paddingBack = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet rotateZ: number;\r\nconst ROTATE_Z_CONTROL = \"rotate-z-range-id\";\r\nPage.Range.addObserver(ROTATE_Z_CONTROL, (r: number) => {\r\n    rotateZ = r;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet flipVertically: boolean;\r\nconst FLIP_VERTICALLY_CONTROL = \"flip-vertically-checkbox-id\";\r\nPage.Checkbox.addObserver(FLIP_VERTICALLY_CONTROL, (checked: boolean) => {\r\n    flipVertically = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nPage.Canvas.Observers.mouseWheel.push((delta: number) => {\r\n    Parameters.fov += delta * 10 * Math.PI / 180;\r\n});\r\n\r\nclass Parameters {\r\n    private constructor() { }\r\n\r\n    public static get onChangeObservers(): OnChangeCallback[] {\r\n        return onChangeObservers;\r\n    }\r\n\r\n    public static get onInputFormatChangeObservers(): OnInputFormatChangeCallback[] {\r\n        return onInputFormatChangeObservers;\r\n    }\r\n\r\n    public static get onImageLoadObservers(): OnImageLoadCallback[] {\r\n        return onImageLoadObservers;\r\n    }\r\n\r\n    public static set image(img: HTMLImageElement) {\r\n        const ERROR_MESSAGE_ID = \"invalid-image\";\r\n\r\n        image = img;\r\n        image.addEventListener(\"load\", () => {\r\n            Page.Demopage.removeErrorMessage(ERROR_MESSAGE_ID);\r\n            for (const callback of onImageLoadObservers) {\r\n                callback(image);\r\n            }\r\n\r\n            callOnChangeObservers();\r\n        });\r\n\r\n        image.addEventListener(\"error\", () => {\r\n            Page.Demopage.setErrorMessage(ERROR_MESSAGE_ID, \"The image could not be loaded.\");\r\n            Page.Canvas.showLoader(false);\r\n            console.error(\"Image could not be loaded.\");\r\n        });\r\n    }\r\n    public static get image(): HTMLImageElement {\r\n        return image;\r\n    }\r\n\r\n    public static set inputFormat(value: Format) {\r\n        inputFormat = value;\r\n        Page.Tabs.setValues(INPUT_FORMAT_CONTROL, [value]);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get inputFormat(): Format {\r\n        return inputFormat;\r\n    }\r\n\r\n    public static set previewOutput(show: boolean) {\r\n        outputPreview = show;\r\n        Page.Checkbox.setChecked(OUPUT_PREVIEW_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get previewOutput(): boolean {\r\n        return outputPreview;\r\n    }\r\n\r\n    public static set outputFormat(value: Format) {\r\n        outputFormat = value;\r\n        Page.Tabs.setValues(OUTPUT_FORMAT_CONTROL, [value]);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get outputFormat(): Format {\r\n        return outputFormat;\r\n    }\r\n\r\n    public static get outputPercentage(): number {\r\n        return +Page.Tabs.getValues(\"output-quality\")[0] / 100;\r\n    }\r\n\r\n    public static set fov(value: number) {\r\n        Page.Range.setValue(FOV_CONTROL, value * 180 / Math.PI);\r\n        fov = Page.Range.getValue(FOV_CONTROL) * Math.PI / 180;\r\n        callOnChangeObservers();\r\n    }\r\n    public static get fov(): number {\r\n        return fov;\r\n    }\r\n\r\n    public static set showFrame(show: boolean) {\r\n        showFrame = show;\r\n        Page.Checkbox.setChecked(FRAME_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get showFrame(): boolean {\r\n        return showFrame;\r\n    }\r\n\r\n    public static set paddingTop(margin: number) {\r\n        Page.Range.setValue(PADDING_TOP_CONTROL, margin);\r\n        paddingTOP = Page.Range.getValue(PADDING_TOP_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingTop(): number {\r\n        return paddingTOP;\r\n    }\r\n\r\n    public static set paddingBottom(margin: number) {\r\n        Page.Range.setValue(PADDING_BOTTOM_CONTROL, margin);\r\n        paddingBottom = Page.Range.getValue(PADDING_BOTTOM_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingBottom(): number {\r\n        return paddingBottom;\r\n    }\r\n\r\n    public static set paddingBack(margin: number) {\r\n        Page.Range.setValue(PADDING_BACK_CONTROL, margin);\r\n        paddingBack = Page.Range.getValue(PADDING_BACK_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingBack(): number {\r\n        return paddingBack;\r\n    }\r\n\r\n    public static set rotateZ(r: number) {\r\n        Page.Range.setValue(ROTATE_Z_CONTROL, r);\r\n        rotateZ = Page.Range.getValue(ROTATE_Z_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get rotateZ(): number {\r\n        return rotateZ;\r\n    }\r\n\r\n    public static set flipVertically(show: boolean) {\r\n        flipVertically = show;\r\n        Page.Checkbox.setChecked(FLIP_VERTICALLY_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get flipVertically(): boolean {\r\n        return flipVertically;\r\n    }\r\n}\r\n\r\nconst css = document.createElement(\"style\");\r\ncss.type = \"text/css\";\r\ncss.innerHTML = \"canvas:active { cursor: grab; }\";\r\ndocument.body.appendChild(css);\r\n\r\nexport {\r\n    Parameters,\r\n};\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n                shader = new Shader(gl, vert, frag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","const EPSILON = 0.0001;\r\n\r\nclass Vec3 {\r\n    public static dotProduct(v1: Vec3, v2: Vec3): number {\r\n        return v1._val[0] * v2._val[0] +\r\n            v1._val[1] * v2._val[1] +\r\n            v1._val[2] * v2._val[2];\r\n    }\r\n\r\n    public static crossProduct(v1: Vec3, v2: Vec3): Vec3 {\r\n        return new Vec3(\r\n            v1._val[1] * v2._val[2] - v1._val[2] * v2._val[1],\r\n            v1._val[2] * v2._val[0] - v1._val[0] * v2._val[2],\r\n            v1._val[0] * v2._val[1] - v1._val[1] * v2._val[0]);\r\n    }\r\n\r\n    public static substract(v1: Vec3, v2: Vec3): Vec3 {\r\n        return new Vec3(\r\n            v1._val[0] - v2._val[0],\r\n            v1._val[1] - v2._val[1],\r\n            v1._val[2] - v2._val[2]);\r\n    }\r\n\r\n    private _val: Float32Array;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        this._val = new Float32Array(3);\r\n        this._val[0] = x;\r\n        this._val[1] = y;\r\n        this._val[2] = z;\r\n    }\r\n\r\n    public get x(): number {\r\n        return this._val[0];\r\n    }\r\n\r\n    public get y(): number {\r\n        return this._val[1];\r\n    }\r\n\r\n    public get z(): number {\r\n        return this._val[2];\r\n    }\r\n\r\n    public equals(other: Vec3): boolean {\r\n        return Math.abs(this._val[0] - other._val[0]) < EPSILON &&\r\n            Math.abs(this._val[1] - other._val[1]) < EPSILON &&\r\n            Math.abs(this._val[2] - other._val[2]) < EPSILON;\r\n    }\r\n\r\n    public divideByScalar(scalar: number): void {\r\n        this._val[0] /= scalar;\r\n        this._val[1] /= scalar;\r\n        this._val[2] /= scalar;\r\n    }\r\n\r\n    public substract(other: Vec3): void {\r\n        this._val[0] -= other._val[0];\r\n        this._val[1] -= other._val[1];\r\n        this._val[2] -= other._val[2];\r\n    }\r\n\r\n    public get length(): number {\r\n        const norm = this._val[0] * this._val[0] +\r\n            this._val[1] * this._val[1] +\r\n            this._val[2] * this._val[2];\r\n        return Math.sqrt(norm);\r\n    }\r\n\r\n    /* Return false if vector cannot be normalized because it's null. */\r\n    public normalize(): boolean {\r\n        if (Math.abs(this._val[0]) < EPSILON &&\r\n            Math.abs(this._val[1]) < EPSILON &&\r\n            Math.abs(this._val[2]) < EPSILON) {\r\n            this._val[0] = 0;\r\n            this._val[1] = 0;\r\n            this._val[2] = 0;\r\n            return false;\r\n        }\r\n\r\n        this.divideByScalar(this.length);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { Vec3 };\r\n","import Converter from \"./converter\";\r\nimport { Format, FormatUtils } from \"./format-utils\";\r\nimport * as GlCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\nimport { Parameters } from \"./parameters\";\r\nimport Viewer from \"./viewer\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main() {\r\n    function resetEditControls() {\r\n        Parameters.paddingTop = 0;\r\n        Parameters.paddingBottom = 0;\r\n        Parameters.paddingBack = 0;\r\n        Parameters.rotateZ = 0;\r\n        Parameters.flipVertically = false;\r\n    }\r\n\r\n    Page.Canvas.showLoader(true);\r\n\r\n    Parameters.onImageLoadObservers.push(resetEditControls);\r\n\r\n    Parameters.image = new Image();\r\n    Parameters.image.src = \"./images/skybox.jpg\";\r\n\r\n    Parameters.inputFormat = Format.Skybox;\r\n\r\n    Parameters.outputFormat = Format.Skysphere;\r\n    Parameters.previewOutput = false;\r\n\r\n    Parameters.fov = 70 * Math.PI / 180;\r\n    Parameters.showFrame = false;\r\n    resetEditControls();\r\n\r\n    const glParams = {\r\n        alpha: false,\r\n        preserveDrawingBuffer: true,\r\n    };\r\n    if (!GlCanvas.initGL(glParams)) {\r\n        return;\r\n    }\r\n\r\n    const viewer = new Viewer();\r\n    const converter = new Converter();\r\n\r\n    let forceRedraw = false;\r\n\r\n    Page.FileControl.addDownloadObserver(\"file-download-id\", () => {\r\n        const idealWidth = Parameters.image.width * Parameters.outputPercentage;\r\n        const width = Math.pow(2, Math.floor(Math.log(idealWidth) * Math.LOG2E));\r\n        const height = width / FormatUtils.ratio(Parameters.outputFormat);\r\n\r\n        const canvas = Page.Canvas.getCanvas() as HTMLCanvasElement;\r\n\r\n        /* Update CSS to allow the canvas to have the correct size */\r\n        canvas.style.position = \"absolute\";\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        GlCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n\r\n        /* tslint:disable:no-bitwise */\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        converter.draw(viewer.texture);\r\n        /* tslint:disable:no-bitwise */\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        converter.draw(viewer.texture);\r\n        /* tslint:enable:no-bitwise */\r\n\r\n        function restoreCanvas() {\r\n            /* Restore CSS */\r\n            canvas.style.position = \"\";\r\n            canvas.style.width = \"\";\r\n            canvas.style.height = \"\";\r\n\r\n            forceRedraw = true;\r\n        }\r\n\r\n        if ((canvas as any).msToBlob) { // for IE\r\n            const blob = (canvas as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n            restoreCanvas();\r\n        } else {\r\n            canvas.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n\r\n                restoreCanvas();\r\n            });\r\n        }\r\n    });\r\n\r\n    const previewViewport = new Viewport(0, 0, 1, 1);\r\n\r\n    function mainLoop() {\r\n        viewer.update();\r\n\r\n        if (viewer.needToRedraw || forceRedraw) {\r\n            GlCanvas.adjustSize();\r\n            Viewport.setFullCanvas(gl);\r\n\r\n            /* tslint:disable:no-bitwise */\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            /* tslint:enable:no-bitwise */\r\n\r\n            viewer.draw();\r\n\r\n            if (Parameters.previewOutput) {\r\n                previewViewport.width = 0.3 * gl.drawingBufferWidth;\r\n                previewViewport.height = previewViewport.width / FormatUtils.ratio(Parameters.outputFormat);\r\n                previewViewport.set(gl);\r\n                converter.draw(viewer.texture);\r\n            }\r\n\r\n            forceRedraw = false;\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport { Format } from \"./format-utils\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nclass Converter extends GLResource {\r\n    private _shaderBoxToBox: Shader;\r\n    private _shaderBoxToPlanet: Shader;\r\n    private _shaderBoxToSphere: Shader;\r\n\r\n    private _shaderSphereToBox: Shader;\r\n    private _shaderSphereToPlanet: Shader;\r\n    private _shaderSphereToSphere: Shader;\r\n\r\n    private _shaderPlanetToBox: Shader;\r\n    private _shaderPlanetToPlanet: Shader;\r\n    private _shaderPlanetToSphere: Shader;\r\n\r\n    private _vbo: VBO;\r\n\r\n    constructor() {\r\n        super(gl);\r\n\r\n        this._vbo = VBO.createQuad(gl, -1, -1, 1, 1);\r\n\r\n        this.buildShader(\"_shaderBoxToBox\",         \"converter.vert\", \"converterBoxToBox.frag\");\r\n        this.buildShader(\"_shaderBoxToPlanet\",      \"converter.vert\", \"converterBoxToPlanet.frag\");\r\n        this.buildShader(\"_shaderBoxToSphere\",      \"converter.vert\", \"converterBoxToSphere.frag\");\r\n\r\n        this.buildShader(\"_shaderSphereToBox\",      \"converter.vert\", \"converterSphereToBox.frag\");\r\n        this.buildShader(\"_shaderSphereToPlanet\",   \"converter.vert\", \"converterSphereToPlanet.frag\");\r\n        this.buildShader(\"_shaderSphereToSphere\",   \"converter.vert\", \"converterSphereToSphere.frag\");\r\n\r\n        this.buildShader(\"_shaderPlanetToBox\",      \"converter.vert\", \"converterPlanetToBox.frag\");\r\n        this.buildShader(\"_shaderPlanetToPlanet\",   \"converter.vert\", \"converterPlanetToPlanet.frag\");\r\n        this.buildShader(\"_shaderPlanetToSphere\",   \"converter.vert\", \"converterPlanetToSphere.frag\");\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._vbo) {\r\n            this._vbo.freeGLResources();\r\n            this._vbo = null;\r\n        }\r\n\r\n        this.deleteShader(\"_shaderBoxToBox\");\r\n        this.deleteShader(\"_shaderBoxToPlanet\");\r\n        this.deleteShader(\"_shaderBoxToSphere\");\r\n\r\n        this.deleteShader(\"_shaderSphereToBox\");\r\n        this.deleteShader(\"_shaderSphereToPlanet\");\r\n        this.deleteShader(\"_shaderSphereToSphere\");\r\n\r\n        this.deleteShader(\"_shaderPlanetToBox\");\r\n        this.deleteShader(\"_shaderPlanetToPlanet\");\r\n        this.deleteShader(\"_shaderPlanetToSphere\");\r\n    }\r\n\r\n    public draw(texture: WebGLTexture): void {\r\n        const shader = this.getShader(Parameters.inputFormat, Parameters.outputFormat);\r\n\r\n        if (shader && texture) {\r\n            /* tslint:disable:no-string-literal */\r\n            shader.u[\"uTexture\"].value = texture;\r\n            shader.u[\"uPaddingTop\"].value = Parameters.paddingTop;\r\n            shader.u[\"uPaddingBottom\"].value = Parameters.paddingBottom;\r\n            shader.u[\"uPaddingBack\"].value = Parameters.paddingBack;\r\n            shader.u[\"uRotateZ\"].value = Parameters.rotateZ;\r\n            shader.u[\"uFlipVertically\"].value = Parameters.flipVertically ? -1 : 1;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n    }\r\n\r\n    private deleteShader(name: string): void {\r\n        /* tslint:disable:no-string-literal */\r\n        if (this[name]) {\r\n            this[name].freeGLResources();\r\n            this[name] = null;\r\n        }\r\n        /* tslint:enable:no-string-literal */\r\n    }\r\n\r\n    private buildShader(name: string, vertex: string, fragment: string): void {\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: fragment,\r\n                vertexFilename: vertex,\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    /* tslint:disable:no-string-literal */\r\n                    this[name] = shader;\r\n                    this[name].a[\"aCorner\"].VBO = this._vbo;\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n            });\r\n    }\r\n\r\n    private getShader(inputFormat: Format, outputFormat: Format): Shader {\r\n        if (inputFormat === Format.Skybox) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderBoxToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderBoxToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderBoxToPlanet;\r\n            }\r\n        } else if (inputFormat === Format.Skysphere) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderSphereToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderSphereToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderSphereToPlanet;\r\n            }\r\n        } else if (inputFormat === Format.Tinyplanet) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderPlanetToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderPlanetToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderPlanetToPlanet;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Converter;\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport { Mat4 } from \"./gl-utils/matrix/mat4\";\r\nimport { Vec3 } from \"./gl-utils/matrix/vec3\";\r\n\r\nimport { Format, FormatUtils } from \"./format-utils\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nclass Viewer extends GLResource {\r\n    private _shaderSkybox: Shader;\r\n    private _shaderSkysphere: Shader;\r\n    private _shaderTinyplanet: Shader;\r\n\r\n    private _vbo: VBO;\r\n    private _texture: WebGLTexture;\r\n\r\n    private _eyePos: Vec3;\r\n    private _vertical: Vec3;\r\n\r\n    private _tmpMatrix: Mat4;\r\n    private _projToWorldMatrix: Mat4;\r\n\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _needToReloadImage: boolean;\r\n    private _needToRedraw: boolean;\r\n\r\n    constructor() {\r\n        super(gl);\r\n\r\n        this._eyePos = new Vec3(0, 0, 0);\r\n        this._vertical = new Vec3(0, 0, 1);\r\n\r\n        this._tmpMatrix = new Mat4();\r\n        this._projToWorldMatrix = new Mat4();\r\n\r\n        this.resetThetaPhi();\r\n\r\n        this._needToReloadImage = false;\r\n        this._needToRedraw = true;\r\n        const doNeedToRedraw = () => { this._needToRedraw = true; };\r\n        const doNeedToReloadImage = () => {\r\n            doNeedToRedraw();\r\n            this.resetThetaPhi();\r\n            this._needToReloadImage = true;\r\n        };\r\n\r\n        Parameters.onInputFormatChangeObservers.push((previous: Format, newOne: Format) => {\r\n            if (previous === Format.Skybox || newOne === Format.Skybox) {\r\n                Page.Canvas.showLoader(true);\r\n                doNeedToReloadImage();\r\n            } else {\r\n                doNeedToRedraw();\r\n            }\r\n        });\r\n        Parameters.onChangeObservers.push(doNeedToRedraw);\r\n        Page.Canvas.Observers.canvasResize.push(doNeedToRedraw);\r\n        Page.Canvas.Observers.mouseDrag.push(doNeedToRedraw);\r\n\r\n        this._vbo = VBO.createQuad(gl, -1, -1, 1, 1);\r\n\r\n        this.buildShader(\"_shaderSkysphere\", \"viewer.vert\", \"viewerSkysphere.frag\");\r\n        this.buildShader(\"_shaderSkybox\", \"viewer.vert\", \"viewerSkybox.frag\");\r\n        this.buildShader(\"_shaderTinyplanet\", \"viewer.vert\", \"viewerTinyplanet.frag\");\r\n\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this._phi += Parameters.fov * Page.Canvas.getAspectRatio() * dX;\r\n            this._theta -= Parameters.fov * dY;\r\n            this._theta = Math.min(Math.PI - 0.001, Math.max(0.001, this._theta));\r\n            doNeedToRedraw();\r\n        });\r\n\r\n        Parameters.onImageLoadObservers.push((image: HTMLImageElement) => {\r\n            Parameters.inputFormat = FormatUtils.guessFormat(image);\r\n            doNeedToReloadImage();\r\n        });\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._vbo) {\r\n            this._vbo.freeGLResources();\r\n            this._vbo = null;\r\n        }\r\n\r\n        if (this._texture) {\r\n            gl.deleteTexture(this._texture);\r\n            this._texture = null;\r\n        }\r\n\r\n        if (this._shaderSkybox) {\r\n            this._shaderSkybox.freeGLResources();\r\n            this._shaderSkybox = null;\r\n        }\r\n\r\n        if (this._shaderSkysphere) {\r\n            this._shaderSkysphere.freeGLResources();\r\n            this._shaderSkysphere = null;\r\n        }\r\n\r\n        if (this._shaderTinyplanet) {\r\n            this._shaderTinyplanet.freeGLResources();\r\n            this._shaderTinyplanet = null;\r\n        }\r\n    }\r\n\r\n    public get texture(): WebGLTexture {\r\n        return this._texture;\r\n    }\r\n\r\n    public get needToRedraw(): boolean {\r\n        return this._needToRedraw;\r\n    }\r\n\r\n    public update(): void {\r\n        if (this._needToReloadImage) {\r\n            if (Parameters.inputFormat === Format.Skybox) {\r\n                this.splitAndLoadSkybox(Parameters.image);\r\n            } else {\r\n                this.loadTexture(Parameters.image);\r\n            }\r\n\r\n            this._needToReloadImage = false;\r\n            Page.Canvas.showLoader(false);\r\n        }\r\n    }\r\n\r\n    public draw(): void {\r\n        let shader: Shader;\r\n        if (Parameters.inputFormat === Format.Skybox) {\r\n            shader = this._shaderSkybox;\r\n        } else if (Parameters.inputFormat === Format.Skysphere) {\r\n            shader = this._shaderSkysphere;\r\n        } else {\r\n            shader = this._shaderTinyplanet;\r\n        }\r\n\r\n        if (shader && this._texture) {\r\n            this.recomputeMatrices();\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.u[\"uProjToWorld\"].value = this._projToWorldMatrix.val;\r\n            shader.u[\"uTexture\"].value = this._texture;\r\n            shader.u[\"uPaddingTop\"].value = Parameters.paddingTop;\r\n            shader.u[\"uPaddingBottom\"].value = Parameters.paddingBottom;\r\n            shader.u[\"uPaddingBack\"].value = Parameters.paddingBack;\r\n            shader.u[\"uRotateZ\"].value = Parameters.rotateZ;\r\n            shader.u[\"uFlipVertically\"].value = Parameters.flipVertically ? -1 : 1;\r\n            shader.u[\"uShowFrame\"].value = Parameters.showFrame ? 1 : 0;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n\r\n        this._needToRedraw = false;\r\n    }\r\n\r\n    private resetThetaPhi(): void {\r\n        this._theta = 0.5 * Math.PI;\r\n        this._phi = 0;\r\n        this._needToRedraw = true;\r\n    }\r\n\r\n    private loadTexture(image: HTMLImageElement): void {\r\n        gl.deleteTexture(this._texture);\r\n        this._texture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    private splitAndLoadSkybox(image: HTMLImageElement): void {\r\n        function chooseUpperPowerOfTwo(n: number): number {\r\n            return Math.pow(2, Math.ceil(Math.log(n) * Math.LOG2E));\r\n        }\r\n\r\n        const side = chooseUpperPowerOfTwo(Math.floor(Math.max(image.width / 4, image.height / 3)));\r\n\r\n        gl.deleteTexture(this._texture);\r\n        this._texture = gl.createTexture();\r\n\r\n        /* Use a temporary canvas to split the image into each face of the cube */\r\n        const context = document.createElement(\"canvas\").getContext(\"2d\");\r\n        context.canvas.width = side;\r\n        context.canvas.height = side;\r\n\r\n        const sidesStyles = [\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_X, position: { x: 2, y: 1 }, rotation: 0.5 * Math.PI },  // front\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X, position: { x: 0, y: 1 }, rotation: -0.5 * Math.PI }, // back\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y, position: { x: 1, y: 1 }, rotation: -Math.PI },       // left\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, position: { x: 3, y: 1 }, rotation: 0 },              // right\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z, position: { x: 1, y: 0 }, rotation: Math.PI },        // top\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, position: { x: 1, y: 2 }, rotation: 0 },              // bottom\r\n        ];\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._texture);\r\n\r\n        context.translate(side, 0);\r\n        context.scale(-1, 1);\r\n\r\n        const sourceWidth = image.width / 4;\r\n        const sourceHeight = image.height / 3;\r\n        for (const sideStyle of sidesStyles) {\r\n            context.translate(0.5 * side, 0.5 * side);\r\n            context.rotate(sideStyle.rotation);\r\n            context.translate(-0.5 * side, -0.5 * side);\r\n\r\n            context.drawImage(image,\r\n                sideStyle.position.x * sourceWidth, sideStyle.position.y * sourceHeight,\r\n                sourceWidth, sourceHeight,\r\n                0, 0, side, side);\r\n\r\n            gl.texImage2D(sideStyle.target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, context.canvas);\r\n\r\n            context.translate(0.5 * side, 0.5 * side);\r\n            context.rotate(-sideStyle.rotation);\r\n            context.translate(-0.5 * side, -0.5 * side);\r\n        }\r\n\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    private buildShader(name: string, vertex: string, fragment: string): void {\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: fragment,\r\n                vertexFilename: vertex,\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    /* tslint:disable:no-string-literal */\r\n                    this[name] = shader;\r\n                    this[name].a[\"aCorner\"].VBO = this._vbo;\r\n                    /* tslint:enable:no-string-literal */\r\n                    this._needToRedraw = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    private recomputeMatrices(): void {\r\n        const lookAt = new Vec3(\r\n            Math.sin(this._theta) * Math.cos(this._phi),\r\n            Math.sin(this._theta) * Math.sin(this._phi),\r\n            Math.cos(this._theta),\r\n        );\r\n        this._projToWorldMatrix.lookAt(this._eyePos, lookAt, this._vertical);\r\n        this._projToWorldMatrix.invert();\r\n\r\n        const canvas = gl.canvas as HTMLCanvasElement;\r\n        const aspectRatio = canvas.clientWidth / canvas.clientHeight;\r\n        this._tmpMatrix.perspectiveInverse(Parameters.fov, aspectRatio, 0.1, Infinity);\r\n\r\n        // no need to remove translations from invViewMatrix since camera is on world (0,0,0)\r\n        // this._invViewMatrix[3*4 + 0] = 0;\r\n        // this._invViewMatrix[3*4 + 1] = 0;\r\n        // this._invViewMatrix[3*4 + 2] = 0;\r\n        this._projToWorldMatrix.multiplyRight(this._tmpMatrix);\r\n    }\r\n}\r\n\r\nexport default Viewer;\r\n","import { Vec3 } from \"./vec3\";\r\n\r\n/* Column-first */\r\nclass Mat4 {\r\n    private static _tmpMatrix = null; // helps for internal computing\r\n\r\n    private static get tmpMatrix(): Mat4 {\r\n        if (Mat4._tmpMatrix === null) {\r\n            Mat4._tmpMatrix = new Mat4();\r\n        }\r\n\r\n        return Mat4._tmpMatrix;\r\n    }\r\n\r\n    private _val: Float32Array;\r\n\r\n    constructor() {\r\n        this._val = new Float32Array(16);\r\n        this.identity();\r\n    }\r\n\r\n    public get val(): Float32Array {\r\n        return this._val;\r\n    }\r\n\r\n    public identity(): void {\r\n        for (let i = 0; i < 16; ++i) {\r\n            this._val[i] = 0;\r\n        }\r\n\r\n        this._val[0] = 1;\r\n        this._val[5] = 1;\r\n        this._val[10] = 1;\r\n        this._val[15] = 1;\r\n    }\r\n\r\n    public lookAt(eye: Vec3, center: Vec3, up: Vec3): void {\r\n        if (eye.equals(center)) {\r\n            this.identity();\r\n            return;\r\n        }\r\n\r\n        const z = Vec3.substract(eye, center);\r\n        z.normalize();\r\n\r\n        const x = Vec3.crossProduct(up, z);\r\n        x.normalize();\r\n\r\n        const y = Vec3.crossProduct(z, x);\r\n        y.normalize();\r\n\r\n        this._val[0] = x.x;\r\n        this._val[1] = y.x;\r\n        this._val[2] = z.x;\r\n        this._val[3] = 0;\r\n        this._val[4] = x.y;\r\n        this._val[5] = y.y;\r\n        this._val[6] = z.y;\r\n        this._val[7] = 0;\r\n        this._val[8] = x.z;\r\n        this._val[9] = y.z;\r\n        this._val[10] = z.z;\r\n        this._val[11] = 0;\r\n        this._val[12] = -Vec3.dotProduct(x, eye);\r\n        this._val[13] = -Vec3.dotProduct(y, eye);\r\n        this._val[14] = -Vec3.dotProduct(z, eye);\r\n        this._val[15] = 1;\r\n    }\r\n\r\n    public multiplyRight(m2: Mat4) {\r\n        const tmp = Mat4.tmpMatrix._val;\r\n        const myself = this._val;\r\n        const other = m2._val;\r\n\r\n        for (let iCol = 0; iCol < 4; ++iCol) {\r\n            for (let iRow = 0; iRow < 4; ++iRow) {\r\n                tmp[4 * iCol + iRow] = 0;\r\n\r\n                for (let i = 0; i < 4; ++i) {\r\n                    tmp[4 * iCol + iRow] += myself[4 * i + iRow] * other[4 * iCol + i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.swapWithTmpMatrix();\r\n    }\r\n\r\n    /* Returns false is the matrix cannot be inverted. */\r\n    public invert(): boolean {\r\n        // shortcuts\r\n        const m = this._val;\r\n        /* tslint:disable:one-variable-per-declaration */\r\n        const m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n        const m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n        const m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n        const m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n        /* tslint:enable:one-variable-per-declaration */\r\n\r\n        const b00 = m00 * m11 - m01 * m10;\r\n        const b01 = m00 * m12 - m02 * m10;\r\n        const b02 = m00 * m13 - m03 * m10;\r\n        const b03 = m01 * m12 - m02 * m11;\r\n        const b04 = m01 * m13 - m03 * m11;\r\n        const b05 = m02 * m13 - m03 * m12;\r\n        const b06 = m20 * m31 - m21 * m30;\r\n        const b07 = m20 * m32 - m22 * m30;\r\n        const b08 = m20 * m33 - m23 * m30;\r\n        const b09 = m21 * m32 - m22 * m31;\r\n        const b10 = m21 * m33 - m23 * m31;\r\n        const b11 = m22 * m33 - m23 * m32;\r\n\r\n        // Compute the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return false;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        /* Compute the invert and store it on Mat4.tmp matrix */\r\n        const tmpVals = Mat4.tmpMatrix._val;\r\n        tmpVals[0] = (m11 * b11 - m12 * b10 + m13 * b09) * det;\r\n        tmpVals[1] = (m02 * b10 - m01 * b11 - m03 * b09) * det;\r\n        tmpVals[2] = (m31 * b05 - m32 * b04 + m33 * b03) * det;\r\n        tmpVals[3] = (m22 * b04 - m21 * b05 - m23 * b03) * det;\r\n        tmpVals[4] = (m12 * b08 - m10 * b11 - m13 * b07) * det;\r\n        tmpVals[5] = (m00 * b11 - m02 * b08 + m03 * b07) * det;\r\n        tmpVals[6] = (m32 * b02 - m30 * b05 - m33 * b01) * det;\r\n        tmpVals[7] = (m20 * b05 - m22 * b02 + m23 * b01) * det;\r\n        tmpVals[8] = (m10 * b10 - m11 * b08 + m13 * b06) * det;\r\n        tmpVals[9] = (m01 * b08 - m00 * b10 - m03 * b06) * det;\r\n        tmpVals[10] = (m30 * b04 - m31 * b02 + m33 * b00) * det;\r\n        tmpVals[11] = (m21 * b02 - m20 * b04 - m23 * b00) * det;\r\n        tmpVals[12] = (m11 * b07 - m10 * b09 - m12 * b06) * det;\r\n        tmpVals[13] = (m00 * b09 - m01 * b07 + m02 * b06) * det;\r\n        tmpVals[14] = (m31 * b01 - m30 * b03 - m32 * b00) * det;\r\n        tmpVals[15] = (m20 * b03 - m21 * b01 + m22 * b00) * det;\r\n\r\n        this.swapWithTmpMatrix();\r\n\r\n        return true;\r\n    }\r\n\r\n    public perspective(fovy: number, aspectRatio: number, nearPlane: number, farPlane: number): void {\r\n        const f = 1 / Math.tan(fovy / 2);\r\n\r\n        this._val[0] = f / aspectRatio;\r\n        this._val[1] = 0;\r\n        this._val[2] = 0;\r\n        this._val[3] = 0;\r\n        this._val[4] = 0;\r\n        this._val[5] = f;\r\n        this._val[6] = 0;\r\n        this._val[7] = 0;\r\n        this._val[8] = 0;\r\n        this._val[9] = 0;\r\n        this._val[11] = -1;\r\n        this._val[12] = 0;\r\n        this._val[13] = 0;\r\n        this._val[15] = 0;\r\n\r\n        if (farPlane === Infinity) {\r\n            this._val[10] = -1;\r\n            this._val[14] = -2 * nearPlane;\r\n        } else {\r\n            const tmp = 1 / (nearPlane - farPlane);\r\n            this._val[10] = (farPlane + nearPlane) * tmp;\r\n            this._val[14] = (2 * farPlane * nearPlane) * tmp;\r\n        }\r\n    }\r\n\r\n    public perspectiveInverse(fovy: number, aspectRatio: number, nearPlane: number, farPlane: number): void {\r\n        const f = Math.tan(fovy / 2);\r\n\r\n        this._val[0] = aspectRatio * f;\r\n        this._val[1] = 0;\r\n        this._val[2] = 0;\r\n        this._val[3] = 0;\r\n        this._val[4] = 0;\r\n        this._val[5] = f;\r\n        this._val[6] = 0;\r\n        this._val[7] = 0;\r\n        this._val[8] = 0;\r\n        this._val[9] = 0;\r\n        this._val[10] = 0;\r\n        this._val[12] = 0;\r\n        this._val[13] = 0;\r\n        this._val[14] = -1;\r\n\r\n        if (farPlane === Infinity) {\r\n            this._val[11] = -0.5;\r\n            this._val[15] = 0.5 / nearPlane;\r\n        } else {\r\n            const tmp = 0.5 / (nearPlane * farPlane);\r\n            this._val[11] = (nearPlane - farPlane) * tmp;\r\n            this._val[15] = (nearPlane + farPlane) * tmp;\r\n        }\r\n    }\r\n\r\n    private swapWithTmpMatrix(): void {\r\n        const tmp = Mat4.tmpMatrix._val;\r\n        Mat4.tmpMatrix._val = this._val;\r\n        this._val = tmp;\r\n    }\r\n}\r\n\r\nexport { Mat4 };\r\n"],"sourceRoot":""}