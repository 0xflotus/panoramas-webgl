{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/format-utils.ts","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/gl-utils/matrix/vec3.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/converter.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/viewer.ts","webpack:///./src/ts/gl-utils/matrix/mat4.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","GLResource","this","_gl","default","Format","FormatUtils","guessFormat","image","mayBeSkybox","Skybox","ratio","abs","Tinyplanet","Skysphere","parseString","str","format","context","document","createElement","drawImage","testedPixels","x","y","reference","getImageData","data","_i","testedPixels_1","length","tested","sample","format_utils_1","onChangeObservers","Array","callOnChangeObservers","_a","Parameters","callback","onImageLoadObservers","FileControl","addUploadObserver","files","showLoader","reader","FileReader","onload","Image","src","result","readAsDataURL","inputFormat","outputFormat","onInputFormatChangeObservers","Tabs","addObserver","values","previous","onInputFormatChangeObservers_1","outputPreview","fov","Checkbox","checked","showFrame","Range","newFov","PI","paddingTOP","paddingBottom","margin","paddingBack","rotateZ","flipVertically","Observers","mouseWheel","push","delta","img","addEventListener","removeErrorMessage","onImageLoadObservers_1","console","error","setValues","show","setChecked","getValues","setValue","getValue","css","type","innerHTML","body","appendChild","gl_canvas_1","shader_1","__importDefault","ShaderSources","__importStar","cachedShaders","buildShader","infos","sourcesPending","sourcesFailed","loadedSource","success","shader","vert","getSource","vertexFilename","frag","fragmentFilename","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","cached_1","builtShader","deleteShader","freeGLResources","VBO","_super","array","size","_this","id","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","normalize","stride","offset","__extends","createQuad","minX","minY","maxX","maxY","Float32Array","FLOAT","deleteBuffer","location","enableVertexAttribArray","vertexAttribPointer","Vec3","z","_val","dotProduct","v1","v2","crossProduct","substract","equals","other","divideByScalar","scalar","norm","sqrt","converter_1","GlCanvas","viewport_1","parameters_1","viewer_1","resetEditControls","paddingTop","previewOutput","alpha","preserveDrawingBuffer","viewer","converter","forceRedraw","addDownloadObserver","idealWidth","outputPercentage","pow","log","LOG2E","restoreCanvas","style","position","setFullCanvas","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","texture","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","href","URL","createObjectURL","click","previewViewport","requestAnimationFrame","mainLoop","update","needToRedraw","drawingBufferWidth","set","main","gl_resource_1","ShaderManager","vbo_1","Converter","_vbo","u","use","bindUniformsAndAttributes","drawArrays","TRIANGLE_STRIP","vertex","fragment","a","_shaderBoxToBox","_shaderBoxToSphere","_shaderBoxToPlanet","_shaderSphereToBox","_shaderSphereToSphere","_shaderSphereToPlanet","_shaderPlanetToBox","_shaderPlanetToSphere","_shaderPlanetToPlanet","notImplemented","alert","types","35664","binder","uniform2fv","35665","uniform3fv","35666","uniform4fv","35667","uniform2iv","35668","uniform3iv","35669","uniform4iv","35670","uniform1i","35671","35672","35673","35674","uniformMatrix2fv","35675","uniformMatrix3fv","35676","uniformMatrix4fv","35678","unitNb","activeTexture","bindTexture","TEXTURE_2D","35680","TEXTURE_CUBE_MAP","5120","5121","5122","5123","5124","isArray","uniform1iv","5125","5126","uniform1fv","uniform1f","ShaderProgram","vertexSource","fragmentSource","createShader","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","forEach","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","name_1","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","name_2","getAttribLocation","cachedSources","filename","text","xhr_1","XMLHttpRequest","open","readyState","status","responseText","statusText","onerror","send","Viewport","left","lower","viewport","drawingBufferHeight","mat4_1","vec3_1","Viewer","_eyePos","_vertical","_tmpMatrix","Mat4","_projToWorldMatrix","resetThetaPhi","_needToReloadImage","_needToRedraw","doNeedToRedraw","doNeedToReloadImage","newOne","canvasResize","mouseDrag","dX","dY","_phi","getAspectRatio","_theta","min","max","_texture","deleteTexture","_shaderSkybox","_shaderSkysphere","_shaderTinyplanet","splitAndLoadSkybox","loadTexture","recomputeMatrices","val","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","side","ceil","sidesStyles","target","TEXTURE_CUBE_MAP_POSITIVE_X","rotation","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","translate","scale","sourceWidth","sourceHeight","sidesStyles_1","sideStyle","rotate","generateMipmap","LINEAR_MIPMAP_LINEAR","lookAt","sin","cos","invert","aspectRatio","perspectiveInverse","Infinity","multiplyRight","identity","eye","center","up","m2","tmp","tmpMatrix","myself","iCol","iRow","swapWithTmpMatrix","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","tmpVals","perspective","fovy","nearPlane","farPlane","f","tan"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","declare const Demopage: any;\r\ndeclare const Canvas: any;\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const width: number = Math.floor(gl.canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(gl.canvas.clientHeight * cssPixel);\r\n    if (gl.canvas.width !== width || gl.canvas.height !== height) {\r\n        gl.canvas.width = width;\r\n        gl.canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","enum Format {\r\n    Skybox = \"skybox\",\r\n    Skysphere = \"skysphere\",\r\n    Tinyplanet = \"tinyplanet\",\r\n}\r\n\r\nclass FormatUtils {\r\n    public static guessFormat(image: HTMLImageElement): Format {\r\n        if (FormatUtils.mayBeSkybox(image)) {\r\n            return Format.Skybox;\r\n        }\r\n\r\n        const ratio = image.width / image.height;\r\n        if (Math.abs(ratio - 1) < 0.1) {\r\n            return Format.Tinyplanet;\r\n        }\r\n\r\n        return Format.Skysphere;\r\n    }\r\n\r\n    public static parseString(str: string): Format {\r\n        if (str === Format.Skybox) {\r\n            return Format.Skybox;\r\n        } else if (str === Format.Tinyplanet) {\r\n            return Format.Tinyplanet;\r\n        } else {\r\n            return Format.Skysphere;\r\n        }\r\n    }\r\n\r\n    public static ratio(format: Format): number {\r\n        if (format === Format.Skybox) {\r\n            return 4 / 3;\r\n        } else if (format === Format.Skysphere) {\r\n            return 2;\r\n        } else /* if (format === Format.Tinyplanet) */ {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    private static mayBeSkybox(image: HTMLImageElement): boolean {\r\n        const context = document.createElement(\"canvas\").getContext(\"2d\");\r\n        context.canvas.width = 8;\r\n        context.canvas.height = 6;\r\n        context.drawImage(image, 0, 0, context.canvas.width, context.canvas.height);\r\n\r\n        const testedPixels = [\r\n            {x: 0, y: 0}, {x: 5, y: 0}, {x: 6, y: 0}, {x: 7, y: 0},   // top\r\n            {x: 0, y: 5}, {x: 5, y: 5}, {x: 6, y: 5}, {x: 7, y: 5},  // bottom\r\n        ];\r\n\r\n        const reference = context.getImageData(testedPixels[0].x, testedPixels[0].y, 1, 1).data;\r\n        for (const tested of testedPixels) {\r\n            const sample = context.getImageData(tested.x, tested.y, 1, 1).data;\r\n\r\n            for (let i = 0; i < 4; ++i) {\r\n                if (sample[i] !== reference[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private constructor() { }\r\n}\r\n\r\nexport {\r\n    Format,\r\n    FormatUtils,\r\n};\r\n","import { Format, FormatUtils } from \"./format-utils\";\r\n\r\ndeclare const Canvas: any;\r\ndeclare const Checkbox: any;\r\ndeclare const Demopage: any;\r\ndeclare const FileControl: any;\r\ndeclare const Range: any;\r\ndeclare const Tabs: any;\r\n\r\ntype OnChangeCallback = () => void;\r\n\r\nconst onChangeObservers = new Array<OnChangeCallback>();\r\nfunction callOnChangeObservers(): void {\r\n    for (const callback of Parameters.onChangeObservers) {\r\n        callback();\r\n    }\r\n}\r\n\r\ntype OnImageLoadCallback = (img: HTMLImageElement) => void;\r\nconst onImageLoadObservers = new Array<OnImageLoadCallback>();\r\n\r\nlet image: HTMLImageElement;\r\n\r\nconst FILE_UPLOAD_CONTROL = \"file-upload-id\";\r\nFileControl.addUploadObserver(FILE_UPLOAD_CONTROL, (files: FileList) => {\r\n    Canvas.showLoader(true);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n        Parameters.image = new Image();\r\n        Parameters.image.src = reader.result as any;\r\n    };\r\n\r\n    reader.readAsDataURL(files[0]);\r\n});\r\n\r\ntype OnInputFormatChangeCallback = (previous: Format, newOne: Format) => void;\r\nconst onInputFormatChangeObservers = new Array<OnInputFormatChangeCallback>();\r\n\r\nlet inputFormat: Format;\r\nconst INPUT_FORMAT_CONTROL = \"input-format\";\r\nTabs.addObserver(INPUT_FORMAT_CONTROL, (values: string[]) => {\r\n    const previous = inputFormat;\r\n    inputFormat = FormatUtils.parseString(values[0]);\r\n\r\n    for (const callback of onInputFormatChangeObservers) {\r\n        callback(previous, inputFormat);\r\n    }\r\n});\r\n\r\nlet outputFormat: Format;\r\nconst OUTPUT_FORMAT_CONTROL = \"output-format\";\r\nTabs.addObserver(OUTPUT_FORMAT_CONTROL, (values: string[]) => {\r\n    outputFormat = FormatUtils.parseString(values[0]);\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet outputPreview: boolean;\r\nconst OUPUT_PREVIEW_CONTROL = \"output-preview-id\";\r\nCheckbox.addObserver(OUPUT_PREVIEW_CONTROL, (checked: boolean) => {\r\n    outputPreview = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet fov: number;\r\nconst FOV_CONTROL = \"fov-range-id\";\r\nRange.addObserver(FOV_CONTROL, (newFov: number) => {\r\n    fov = Math.PI / 180 * newFov;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet showFrame: boolean;\r\nconst FRAME_CONTROL = \"frame-checkbox-id\";\r\nCheckbox.addObserver(FRAME_CONTROL, (checked: boolean) => {\r\n    showFrame = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingTOP: number;\r\nconst PADDING_TOP_CONTROL = \"padding-top-range-id\";\r\nRange.addObserver(PADDING_TOP_CONTROL, (margin: number) => {\r\n    paddingTOP = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingBottom: number;\r\nconst PADDING_BOTTOM_CONTROL = \"padding-bottom-range-id\";\r\nRange.addObserver(PADDING_BOTTOM_CONTROL, (margin: number) => {\r\n    paddingBottom = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingBack: number;\r\nconst PADDING_BACK_CONTROL = \"padding-back-range-id\";\r\nRange.addObserver(PADDING_BACK_CONTROL, (margin: number) => {\r\n    paddingBack = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet rotateZ: number;\r\nconst ROTATE_Z_CONTROL = \"rotate-z-range-id\";\r\nRange.addObserver(ROTATE_Z_CONTROL, (r: number) => {\r\n    rotateZ = r;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet flipVertically: boolean;\r\nconst FLIP_VERTICALLY_CONTROL = \"flip-vertically-checkbox-id\";\r\nCheckbox.addObserver(FLIP_VERTICALLY_CONTROL, (checked: boolean) => {\r\n    flipVertically = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nCanvas.Observers.mouseWheel.push((delta: number) => {\r\n    Parameters.fov += delta * 10 * Math.PI / 180;\r\n});\r\n\r\nclass Parameters {\r\n    private constructor() { }\r\n\r\n    public static get onChangeObservers(): OnChangeCallback[] {\r\n        return onChangeObservers;\r\n    }\r\n\r\n    public static get onInputFormatChangeObservers(): OnInputFormatChangeCallback[] {\r\n        return onInputFormatChangeObservers;\r\n    }\r\n\r\n    public static get onImageLoadObservers(): OnImageLoadCallback[] {\r\n        return onImageLoadObservers;\r\n    }\r\n\r\n    public static set image(img: HTMLImageElement) {\r\n        const ERROR_MESSAGE_ID = \"invalid-image\";\r\n\r\n        image = img;\r\n        image.addEventListener(\"load\", () => {\r\n            Demopage.removeErrorMessage(ERROR_MESSAGE_ID);\r\n            for (const callback of onImageLoadObservers) {\r\n                callback(image);\r\n            }\r\n\r\n            callOnChangeObservers();\r\n        });\r\n\r\n        image.addEventListener(\"error\", () => {\r\n            Demopage.setErrorMessage(ERROR_MESSAGE_ID, \"The image could not be loaded.\");\r\n            Canvas.showLoader(false);\r\n            console.error(\"Image could not be loaded.\");\r\n        });\r\n    }\r\n    public static get image(): HTMLImageElement {\r\n        return image;\r\n    }\r\n\r\n    public static set inputFormat(value: Format) {\r\n        inputFormat = value;\r\n        Tabs.setValues(INPUT_FORMAT_CONTROL, [value]);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get inputFormat(): Format {\r\n        return inputFormat;\r\n    }\r\n\r\n    public static set previewOutput(show: boolean) {\r\n        outputPreview = show;\r\n        Checkbox.setChecked(OUPUT_PREVIEW_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get previewOutput(): boolean {\r\n        return outputPreview;\r\n    }\r\n\r\n    public static set outputFormat(value: Format) {\r\n        outputFormat = value;\r\n        Tabs.setValues(OUTPUT_FORMAT_CONTROL, [value]);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get outputFormat(): Format {\r\n        return outputFormat;\r\n    }\r\n\r\n    public static get outputPercentage(): number {\r\n        return +Tabs.getValues(\"output-quality\")[0] / 100;\r\n    }\r\n\r\n    public static set fov(value: number) {\r\n        Range.setValue(FOV_CONTROL, value * 180 / Math.PI);\r\n        fov = Range.getValue(FOV_CONTROL) * Math.PI / 180;\r\n        callOnChangeObservers();\r\n    }\r\n    public static get fov(): number {\r\n        return fov;\r\n    }\r\n\r\n    public static set showFrame(show: boolean) {\r\n        showFrame = show;\r\n        Checkbox.setChecked(FRAME_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get showFrame(): boolean {\r\n        return showFrame;\r\n    }\r\n\r\n    public static set paddingTop(margin: number) {\r\n        Range.setValue(PADDING_TOP_CONTROL, margin);\r\n        paddingTOP = Range.getValue(PADDING_TOP_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingTop(): number {\r\n        return paddingTOP;\r\n    }\r\n\r\n    public static set paddingBottom(margin: number) {\r\n        Range.setValue(PADDING_BOTTOM_CONTROL, margin);\r\n        paddingBottom = Range.getValue(PADDING_BOTTOM_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingBottom(): number {\r\n        return paddingBottom;\r\n    }\r\n\r\n    public static set paddingBack(margin: number) {\r\n        Range.setValue(PADDING_BACK_CONTROL, margin);\r\n        paddingBack = Range.getValue(PADDING_BACK_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingBack(): number {\r\n        return paddingBack;\r\n    }\r\n\r\n    public static set rotateZ(r: number) {\r\n        Range.setValue(ROTATE_Z_CONTROL, r);\r\n        rotateZ = Range.getValue(ROTATE_Z_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get rotateZ(): number {\r\n        return rotateZ;\r\n    }\r\n\r\n    public static set flipVertically(show: boolean) {\r\n        flipVertically = show;\r\n        Checkbox.setChecked(FLIP_VERTICALLY_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get flipVertically(): boolean {\r\n        return flipVertically;\r\n    }\r\n}\r\n\r\nconst css = document.createElement(\"style\");\r\ncss.type = \"text/css\";\r\ncss.innerHTML = \"canvas:active { cursor: grab; }\";\r\ndocument.body.appendChild(css);\r\n\r\nexport {\r\n    Parameters,\r\n};\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n                shader = new Shader(gl, vert, frag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","const EPSILON = 0.0001;\r\n\r\nclass Vec3 {\r\n    public static dotProduct(v1: Vec3, v2: Vec3): number {\r\n        return v1._val[0] * v2._val[0] +\r\n            v1._val[1] * v2._val[1] +\r\n            v1._val[2] * v2._val[2];\r\n    }\r\n\r\n    public static crossProduct(v1: Vec3, v2: Vec3): Vec3 {\r\n        return new Vec3(\r\n            v1._val[1] * v2._val[2] - v1._val[2] * v2._val[1],\r\n            v1._val[2] * v2._val[0] - v1._val[0] * v2._val[2],\r\n            v1._val[0] * v2._val[1] - v1._val[1] * v2._val[0]);\r\n    }\r\n\r\n    public static substract(v1: Vec3, v2: Vec3): Vec3 {\r\n        return new Vec3(\r\n            v1._val[0] - v2._val[0],\r\n            v1._val[1] - v2._val[1],\r\n            v1._val[2] - v2._val[2]);\r\n    }\r\n\r\n    private _val: Float32Array;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        this._val = new Float32Array(3);\r\n        this._val[0] = x;\r\n        this._val[1] = y;\r\n        this._val[2] = z;\r\n    }\r\n\r\n    public get x(): number {\r\n        return this._val[0];\r\n    }\r\n\r\n    public get y(): number {\r\n        return this._val[1];\r\n    }\r\n\r\n    public get z(): number {\r\n        return this._val[2];\r\n    }\r\n\r\n    public equals(other: Vec3): boolean {\r\n        return Math.abs(this._val[0] - other._val[0]) < EPSILON &&\r\n            Math.abs(this._val[1] - other._val[1]) < EPSILON &&\r\n            Math.abs(this._val[2] - other._val[2]) < EPSILON;\r\n    }\r\n\r\n    public divideByScalar(scalar: number): void {\r\n        this._val[0] /= scalar;\r\n        this._val[1] /= scalar;\r\n        this._val[2] /= scalar;\r\n    }\r\n\r\n    public substract(other: Vec3): void {\r\n        this._val[0] -= other._val[0];\r\n        this._val[1] -= other._val[1];\r\n        this._val[2] -= other._val[2];\r\n    }\r\n\r\n    public get length(): number {\r\n        const norm = this._val[0] * this._val[0] +\r\n            this._val[1] * this._val[1] +\r\n            this._val[2] * this._val[2];\r\n        return Math.sqrt(norm);\r\n    }\r\n\r\n    /* Return false if vector cannot be normalized because it's null. */\r\n    public normalize(): boolean {\r\n        if (Math.abs(this._val[0]) < EPSILON &&\r\n            Math.abs(this._val[1]) < EPSILON &&\r\n            Math.abs(this._val[2]) < EPSILON) {\r\n            this._val[0] = 0;\r\n            this._val[1] = 0;\r\n            this._val[2] = 0;\r\n            return false;\r\n        }\r\n\r\n        this.divideByScalar(this.length);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { Vec3 };\r\n","import Converter from \"./converter\";\r\nimport { Format, FormatUtils } from \"./format-utils\";\r\nimport * as GlCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\nimport { Parameters } from \"./parameters\";\r\nimport Viewer from \"./viewer\";\r\n\r\ndeclare const Canvas: any;\r\ndeclare const FileControl: any;\r\n\r\nfunction main() {\r\n    function resetEditControls() {\r\n        Parameters.paddingTop = 0;\r\n        Parameters.paddingBottom = 0;\r\n        Parameters.paddingBack = 0;\r\n        Parameters.rotateZ = 0;\r\n        Parameters.flipVertically = false;\r\n    }\r\n\r\n    Canvas.showLoader(true);\r\n\r\n    Parameters.onImageLoadObservers.push(resetEditControls);\r\n\r\n    Parameters.image = new Image();\r\n    Parameters.image.src = \"./images/skybox.jpg\";\r\n\r\n    Parameters.inputFormat = Format.Skybox;\r\n\r\n    Parameters.outputFormat = Format.Skysphere;\r\n    Parameters.previewOutput = false;\r\n\r\n    Parameters.fov = 70 * Math.PI / 180;\r\n    Parameters.showFrame = false;\r\n    resetEditControls();\r\n\r\n    const glParams = {\r\n        alpha: false,\r\n        preserveDrawingBuffer: true,\r\n    };\r\n    if (!GlCanvas.initGL(glParams)) {\r\n        return;\r\n    }\r\n\r\n    const viewer = new Viewer();\r\n    const converter = new Converter();\r\n\r\n    let forceRedraw = false;\r\n\r\n    FileControl.addDownloadObserver(\"file-download-id\", () => {\r\n        const idealWidth = Parameters.image.width * Parameters.outputPercentage;\r\n        const width = Math.pow(2, Math.floor(Math.log(idealWidth) * Math.LOG2E));\r\n        const height = width / FormatUtils.ratio(Parameters.outputFormat);\r\n\r\n        const canvas = Canvas.getCanvas() as HTMLCanvasElement;\r\n\r\n        /* Update CSS to allow the canvas to have the correct size */\r\n        canvas.style.position = \"absolute\";\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        GlCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n\r\n        /* tslint:disable:no-bitwise */\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        converter.draw(viewer.texture);\r\n        /* tslint:disable:no-bitwise */\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        converter.draw(viewer.texture);\r\n        /* tslint:enable:no-bitwise */\r\n\r\n        function restoreCanvas() {\r\n            /* Restore CSS */\r\n            canvas.style.position = \"\";\r\n            canvas.style.width = \"\";\r\n            canvas.style.height = \"\";\r\n\r\n            forceRedraw = true;\r\n        }\r\n\r\n        if ((canvas as any).msToBlob) { // for IE\r\n            const blob = (canvas as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n            restoreCanvas();\r\n        } else {\r\n            canvas.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n\r\n                restoreCanvas();\r\n            });\r\n        }\r\n    });\r\n\r\n    const previewViewport = new Viewport(0, 0, 1, 1);\r\n\r\n    function mainLoop() {\r\n        viewer.update();\r\n\r\n        if (viewer.needToRedraw || forceRedraw) {\r\n            GlCanvas.adjustSize();\r\n            Viewport.setFullCanvas(gl);\r\n\r\n            /* tslint:disable:no-bitwise */\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            /* tslint:enable:no-bitwise */\r\n\r\n            viewer.draw();\r\n\r\n            if (Parameters.previewOutput) {\r\n                previewViewport.width = 0.3 * gl.drawingBufferWidth;\r\n                previewViewport.height = previewViewport.width / FormatUtils.ratio(Parameters.outputFormat);\r\n                previewViewport.set(gl);\r\n                converter.draw(viewer.texture);\r\n            }\r\n\r\n            forceRedraw = false;\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport { Format } from \"./format-utils\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nclass Converter extends GLResource {\r\n    private _shaderBoxToBox: Shader;\r\n    private _shaderBoxToPlanet: Shader;\r\n    private _shaderBoxToSphere: Shader;\r\n\r\n    private _shaderSphereToBox: Shader;\r\n    private _shaderSphereToPlanet: Shader;\r\n    private _shaderSphereToSphere: Shader;\r\n\r\n    private _shaderPlanetToBox: Shader;\r\n    private _shaderPlanetToPlanet: Shader;\r\n    private _shaderPlanetToSphere: Shader;\r\n\r\n    private _vbo: VBO;\r\n\r\n    constructor() {\r\n        super(gl);\r\n\r\n        this._vbo = VBO.createQuad(gl, -1, -1, 1, 1);\r\n\r\n        this.buildShader(\"_shaderBoxToBox\",         \"converter.vert\", \"converterBoxToBox.frag\");\r\n        this.buildShader(\"_shaderBoxToPlanet\",      \"converter.vert\", \"converterBoxToPlanet.frag\");\r\n        this.buildShader(\"_shaderBoxToSphere\",      \"converter.vert\", \"converterBoxToSphere.frag\");\r\n\r\n        this.buildShader(\"_shaderSphereToBox\",      \"converter.vert\", \"converterSphereToBox.frag\");\r\n        this.buildShader(\"_shaderSphereToPlanet\",   \"converter.vert\", \"converterSphereToPlanet.frag\");\r\n        this.buildShader(\"_shaderSphereToSphere\",   \"converter.vert\", \"converterSphereToSphere.frag\");\r\n\r\n        this.buildShader(\"_shaderPlanetToBox\",      \"converter.vert\", \"converterPlanetToBox.frag\");\r\n        this.buildShader(\"_shaderPlanetToPlanet\",   \"converter.vert\", \"converterPlanetToPlanet.frag\");\r\n        this.buildShader(\"_shaderPlanetToSphere\",   \"converter.vert\", \"converterPlanetToSphere.frag\");\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._vbo) {\r\n            this._vbo.freeGLResources();\r\n            this._vbo = null;\r\n        }\r\n\r\n        this.deleteShader(\"_shaderBoxToBox\");\r\n        this.deleteShader(\"_shaderBoxToPlanet\");\r\n        this.deleteShader(\"_shaderBoxToSphere\");\r\n\r\n        this.deleteShader(\"_shaderSphereToBox\");\r\n        this.deleteShader(\"_shaderSphereToPlanet\");\r\n        this.deleteShader(\"_shaderSphereToSphere\");\r\n\r\n        this.deleteShader(\"_shaderPlanetToBox\");\r\n        this.deleteShader(\"_shaderPlanetToPlanet\");\r\n        this.deleteShader(\"_shaderPlanetToSphere\");\r\n    }\r\n\r\n    public draw(texture: WebGLTexture): void {\r\n        const shader = this.getShader(Parameters.inputFormat, Parameters.outputFormat);\r\n\r\n        if (shader && texture) {\r\n            /* tslint:disable:no-string-literal */\r\n            shader.u[\"uTexture\"].value = texture;\r\n            shader.u[\"uPaddingTop\"].value = Parameters.paddingTop;\r\n            shader.u[\"uPaddingBottom\"].value = Parameters.paddingBottom;\r\n            shader.u[\"uPaddingBack\"].value = Parameters.paddingBack;\r\n            shader.u[\"uRotateZ\"].value = Parameters.rotateZ;\r\n            shader.u[\"uFlipVertically\"].value = Parameters.flipVertically ? -1 : 1;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n    }\r\n\r\n    private deleteShader(name: string): void {\r\n        /* tslint:disable:no-string-literal */\r\n        if (this[name]) {\r\n            this[name].freeGLResources();\r\n            this[name] = null;\r\n        }\r\n        /* tslint:enable:no-string-literal */\r\n    }\r\n\r\n    private buildShader(name: string, vertex: string, fragment: string): void {\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: fragment,\r\n                vertexFilename: vertex,\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    /* tslint:disable:no-string-literal */\r\n                    this[name] = shader;\r\n                    this[name].a[\"aCorner\"].VBO = this._vbo;\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n            });\r\n    }\r\n\r\n    private getShader(inputFormat: Format, outputFormat: Format): Shader {\r\n        if (inputFormat === Format.Skybox) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderBoxToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderBoxToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderBoxToPlanet;\r\n            }\r\n        } else if (inputFormat === Format.Skysphere) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderSphereToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderSphereToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderSphereToPlanet;\r\n            }\r\n        } else if (inputFormat === Format.Tinyplanet) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderPlanetToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderPlanetToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderPlanetToPlanet;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Converter;\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport { Mat4 } from \"./gl-utils/matrix/mat4\";\r\nimport { Vec3 } from \"./gl-utils/matrix/vec3\";\r\n\r\nimport { Format, FormatUtils } from \"./format-utils\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\ndeclare const Canvas: any;\r\n\r\nclass Viewer extends GLResource {\r\n    private _shaderSkybox: Shader;\r\n    private _shaderSkysphere: Shader;\r\n    private _shaderTinyplanet: Shader;\r\n\r\n    private _vbo: VBO;\r\n    private _texture: WebGLTexture;\r\n\r\n    private _eyePos: Vec3;\r\n    private _vertical: Vec3;\r\n\r\n    private _tmpMatrix: Mat4;\r\n    private _projToWorldMatrix: Mat4;\r\n\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _needToReloadImage: boolean;\r\n    private _needToRedraw: boolean;\r\n\r\n    constructor() {\r\n        super(gl);\r\n\r\n        this._eyePos = new Vec3(0, 0, 0);\r\n        this._vertical = new Vec3(0, 0, 1);\r\n\r\n        this._tmpMatrix = new Mat4();\r\n        this._projToWorldMatrix = new Mat4();\r\n\r\n        this.resetThetaPhi();\r\n\r\n        this._needToReloadImage = false;\r\n        this._needToRedraw = true;\r\n        const doNeedToRedraw = () => { this._needToRedraw = true; };\r\n        const doNeedToReloadImage = () => {\r\n            doNeedToRedraw();\r\n            this.resetThetaPhi();\r\n            this._needToReloadImage = true;\r\n        };\r\n\r\n        Parameters.onInputFormatChangeObservers.push((previous: Format, newOne: Format) => {\r\n            if (previous === Format.Skybox || newOne === Format.Skybox) {\r\n                Canvas.showLoader(true);\r\n                doNeedToReloadImage();\r\n            } else {\r\n                doNeedToRedraw();\r\n            }\r\n        });\r\n        Parameters.onChangeObservers.push(doNeedToRedraw);\r\n        Canvas.Observers.canvasResize.push(doNeedToRedraw);\r\n        Canvas.Observers.mouseDrag.push(doNeedToRedraw);\r\n\r\n        this._vbo = VBO.createQuad(gl, -1, -1, 1, 1);\r\n\r\n        this.buildShader(\"_shaderSkysphere\", \"viewer.vert\", \"viewerSkysphere.frag\");\r\n        this.buildShader(\"_shaderSkybox\", \"viewer.vert\", \"viewerSkybox.frag\");\r\n        this.buildShader(\"_shaderTinyplanet\", \"viewer.vert\", \"viewerTinyplanet.frag\");\r\n\r\n        Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this._phi += Parameters.fov * Canvas.getAspectRatio() * dX;\r\n            this._theta -= Parameters.fov * dY;\r\n            this._theta = Math.min(Math.PI - 0.001, Math.max(0.001, this._theta));\r\n            doNeedToRedraw();\r\n        });\r\n\r\n        Parameters.onImageLoadObservers.push((image: HTMLImageElement) => {\r\n            Parameters.inputFormat = FormatUtils.guessFormat(image);\r\n            doNeedToReloadImage();\r\n        });\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._vbo) {\r\n            this._vbo.freeGLResources();\r\n            this._vbo = null;\r\n        }\r\n\r\n        if (this._texture) {\r\n            gl.deleteTexture(this._texture);\r\n            this._texture = null;\r\n        }\r\n\r\n        if (this._shaderSkybox) {\r\n            this._shaderSkybox.freeGLResources();\r\n            this._shaderSkybox = null;\r\n        }\r\n\r\n        if (this._shaderSkysphere) {\r\n            this._shaderSkysphere.freeGLResources();\r\n            this._shaderSkysphere = null;\r\n        }\r\n\r\n        if (this._shaderTinyplanet) {\r\n            this._shaderTinyplanet.freeGLResources();\r\n            this._shaderTinyplanet = null;\r\n        }\r\n    }\r\n\r\n    public get texture(): WebGLTexture {\r\n        return this._texture;\r\n    }\r\n\r\n    public get needToRedraw(): boolean {\r\n        return this._needToRedraw;\r\n    }\r\n\r\n    public update(): void {\r\n        if (this._needToReloadImage) {\r\n            if (Parameters.inputFormat === Format.Skybox) {\r\n                this.splitAndLoadSkybox(Parameters.image);\r\n            } else {\r\n                this.loadTexture(Parameters.image);\r\n            }\r\n\r\n            this._needToReloadImage = false;\r\n            Canvas.showLoader(false);\r\n        }\r\n    }\r\n\r\n    public draw(): void {\r\n        let shader: Shader;\r\n        if (Parameters.inputFormat === Format.Skybox) {\r\n            shader = this._shaderSkybox;\r\n        } else if (Parameters.inputFormat === Format.Skysphere) {\r\n            shader = this._shaderSkysphere;\r\n        } else {\r\n            shader = this._shaderTinyplanet;\r\n        }\r\n\r\n        if (shader && this._texture) {\r\n            this.recomputeMatrices();\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.u[\"uProjToWorld\"].value = this._projToWorldMatrix.val;\r\n            shader.u[\"uTexture\"].value = this._texture;\r\n            shader.u[\"uPaddingTop\"].value = Parameters.paddingTop;\r\n            shader.u[\"uPaddingBottom\"].value = Parameters.paddingBottom;\r\n            shader.u[\"uPaddingBack\"].value = Parameters.paddingBack;\r\n            shader.u[\"uRotateZ\"].value = Parameters.rotateZ;\r\n            shader.u[\"uFlipVertically\"].value = Parameters.flipVertically ? -1 : 1;\r\n            shader.u[\"uShowFrame\"].value = Parameters.showFrame ? 1 : 0;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n\r\n        this._needToRedraw = false;\r\n    }\r\n\r\n    private resetThetaPhi(): void {\r\n        this._theta = 0.5 * Math.PI;\r\n        this._phi = 0;\r\n        this._needToRedraw = true;\r\n    }\r\n\r\n    private loadTexture(image: HTMLImageElement): void {\r\n        gl.deleteTexture(this._texture);\r\n        this._texture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    private splitAndLoadSkybox(image: HTMLImageElement): void {\r\n        function chooseUpperPowerOfTwo(n: number): number {\r\n            return Math.pow(2, Math.ceil(Math.log(n) * Math.LOG2E));\r\n        }\r\n\r\n        const side = chooseUpperPowerOfTwo(Math.floor(Math.max(image.width / 4, image.height / 3)));\r\n\r\n        gl.deleteTexture(this._texture);\r\n        this._texture = gl.createTexture();\r\n\r\n        /* Use a temporary canvas to split the image into each face of the cube */\r\n        const context = document.createElement(\"canvas\").getContext(\"2d\");\r\n        context.canvas.width = side;\r\n        context.canvas.height = side;\r\n\r\n        const sidesStyles = [\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_X, position: { x: 2, y: 1 }, rotation: 0.5 * Math.PI },  // front\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X, position: { x: 0, y: 1 }, rotation: -0.5 * Math.PI }, // back\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y, position: { x: 1, y: 1 }, rotation: -Math.PI },       // left\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, position: { x: 3, y: 1 }, rotation: 0 },              // right\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z, position: { x: 1, y: 0 }, rotation: Math.PI },        // top\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, position: { x: 1, y: 2 }, rotation: 0 },              // bottom\r\n        ];\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._texture);\r\n\r\n        context.translate(side, 0);\r\n        context.scale(-1, 1);\r\n\r\n        const sourceWidth = image.width / 4;\r\n        const sourceHeight = image.height / 3;\r\n        for (const sideStyle of sidesStyles) {\r\n            context.translate(0.5 * side, 0.5 * side);\r\n            context.rotate(sideStyle.rotation);\r\n            context.translate(-0.5 * side, -0.5 * side);\r\n\r\n            context.drawImage(image,\r\n                sideStyle.position.x * sourceWidth, sideStyle.position.y * sourceHeight,\r\n                sourceWidth, sourceHeight,\r\n                0, 0, side, side);\r\n\r\n            gl.texImage2D(sideStyle.target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, context.canvas);\r\n\r\n            context.translate(0.5 * side, 0.5 * side);\r\n            context.rotate(-sideStyle.rotation);\r\n            context.translate(-0.5 * side, -0.5 * side);\r\n        }\r\n\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    private buildShader(name: string, vertex: string, fragment: string): void {\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: fragment,\r\n                vertexFilename: vertex,\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    /* tslint:disable:no-string-literal */\r\n                    this[name] = shader;\r\n                    this[name].a[\"aCorner\"].VBO = this._vbo;\r\n                    /* tslint:enable:no-string-literal */\r\n                    this._needToRedraw = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    private recomputeMatrices(): void {\r\n        const lookAt = new Vec3(\r\n            Math.sin(this._theta) * Math.cos(this._phi),\r\n            Math.sin(this._theta) * Math.sin(this._phi),\r\n            Math.cos(this._theta),\r\n        );\r\n        this._projToWorldMatrix.lookAt(this._eyePos, lookAt, this._vertical);\r\n        this._projToWorldMatrix.invert();\r\n\r\n        const aspectRatio = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n        this._tmpMatrix.perspectiveInverse(Parameters.fov, aspectRatio, 0.1, Infinity);\r\n\r\n        // no need to remove translations from invViewMatrix since camera is on world (0,0,0)\r\n        // this._invViewMatrix[3*4 + 0] = 0;\r\n        // this._invViewMatrix[3*4 + 1] = 0;\r\n        // this._invViewMatrix[3*4 + 2] = 0;\r\n        this._projToWorldMatrix.multiplyRight(this._tmpMatrix);\r\n    }\r\n}\r\n\r\nexport default Viewer;\r\n","import { Vec3 } from \"./vec3\";\r\n\r\n/* Column-first */\r\nclass Mat4 {\r\n    private static _tmpMatrix = null; // helps for internal computing\r\n\r\n    private static get tmpMatrix(): Mat4 {\r\n        if (Mat4._tmpMatrix === null) {\r\n            Mat4._tmpMatrix = new Mat4();\r\n        }\r\n\r\n        return Mat4._tmpMatrix;\r\n    }\r\n\r\n    private _val: Float32Array;\r\n\r\n    constructor() {\r\n        this._val = new Float32Array(16);\r\n        this.identity();\r\n    }\r\n\r\n    public get val(): Float32Array {\r\n        return this._val;\r\n    }\r\n\r\n    public identity(): void {\r\n        for (let i = 0; i < 16; ++i) {\r\n            this._val[i] = 0;\r\n        }\r\n\r\n        this._val[0] = 1;\r\n        this._val[5] = 1;\r\n        this._val[10] = 1;\r\n        this._val[15] = 1;\r\n    }\r\n\r\n    public lookAt(eye: Vec3, center: Vec3, up: Vec3): void {\r\n        if (eye.equals(center)) {\r\n            this.identity();\r\n            return;\r\n        }\r\n\r\n        const z = Vec3.substract(eye, center);\r\n        z.normalize();\r\n\r\n        const x = Vec3.crossProduct(up, z);\r\n        x.normalize();\r\n\r\n        const y = Vec3.crossProduct(z, x);\r\n        y.normalize();\r\n\r\n        this._val[0] = x.x;\r\n        this._val[1] = y.x;\r\n        this._val[2] = z.x;\r\n        this._val[3] = 0;\r\n        this._val[4] = x.y;\r\n        this._val[5] = y.y;\r\n        this._val[6] = z.y;\r\n        this._val[7] = 0;\r\n        this._val[8] = x.z;\r\n        this._val[9] = y.z;\r\n        this._val[10] = z.z;\r\n        this._val[11] = 0;\r\n        this._val[12] = -Vec3.dotProduct(x, eye);\r\n        this._val[13] = -Vec3.dotProduct(y, eye);\r\n        this._val[14] = -Vec3.dotProduct(z, eye);\r\n        this._val[15] = 1;\r\n    }\r\n\r\n    public multiplyRight(m2: Mat4) {\r\n        const tmp = Mat4.tmpMatrix._val;\r\n        const myself = this._val;\r\n        const other = m2._val;\r\n\r\n        for (let iCol = 0; iCol < 4; ++iCol) {\r\n            for (let iRow = 0; iRow < 4; ++iRow) {\r\n                tmp[4 * iCol + iRow] = 0;\r\n\r\n                for (let i = 0; i < 4; ++i) {\r\n                    tmp[4 * iCol + iRow] += myself[4 * i + iRow] * other[4 * iCol + i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.swapWithTmpMatrix();\r\n    }\r\n\r\n    /* Returns false is the matrix cannot be inverted. */\r\n    public invert(): boolean {\r\n        // shortcuts\r\n        const m = this._val;\r\n        /* tslint:disable:one-variable-per-declaration */\r\n        const m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n        const m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n        const m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n        const m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n        /* tslint:enable:one-variable-per-declaration */\r\n\r\n        const b00 = m00 * m11 - m01 * m10;\r\n        const b01 = m00 * m12 - m02 * m10;\r\n        const b02 = m00 * m13 - m03 * m10;\r\n        const b03 = m01 * m12 - m02 * m11;\r\n        const b04 = m01 * m13 - m03 * m11;\r\n        const b05 = m02 * m13 - m03 * m12;\r\n        const b06 = m20 * m31 - m21 * m30;\r\n        const b07 = m20 * m32 - m22 * m30;\r\n        const b08 = m20 * m33 - m23 * m30;\r\n        const b09 = m21 * m32 - m22 * m31;\r\n        const b10 = m21 * m33 - m23 * m31;\r\n        const b11 = m22 * m33 - m23 * m32;\r\n\r\n        // Compute the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return false;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        /* Compute the invert and store it on Mat4.tmp matrix */\r\n        const tmpVals = Mat4.tmpMatrix._val;\r\n        tmpVals[0] = (m11 * b11 - m12 * b10 + m13 * b09) * det;\r\n        tmpVals[1] = (m02 * b10 - m01 * b11 - m03 * b09) * det;\r\n        tmpVals[2] = (m31 * b05 - m32 * b04 + m33 * b03) * det;\r\n        tmpVals[3] = (m22 * b04 - m21 * b05 - m23 * b03) * det;\r\n        tmpVals[4] = (m12 * b08 - m10 * b11 - m13 * b07) * det;\r\n        tmpVals[5] = (m00 * b11 - m02 * b08 + m03 * b07) * det;\r\n        tmpVals[6] = (m32 * b02 - m30 * b05 - m33 * b01) * det;\r\n        tmpVals[7] = (m20 * b05 - m22 * b02 + m23 * b01) * det;\r\n        tmpVals[8] = (m10 * b10 - m11 * b08 + m13 * b06) * det;\r\n        tmpVals[9] = (m01 * b08 - m00 * b10 - m03 * b06) * det;\r\n        tmpVals[10] = (m30 * b04 - m31 * b02 + m33 * b00) * det;\r\n        tmpVals[11] = (m21 * b02 - m20 * b04 - m23 * b00) * det;\r\n        tmpVals[12] = (m11 * b07 - m10 * b09 - m12 * b06) * det;\r\n        tmpVals[13] = (m00 * b09 - m01 * b07 + m02 * b06) * det;\r\n        tmpVals[14] = (m31 * b01 - m30 * b03 - m32 * b00) * det;\r\n        tmpVals[15] = (m20 * b03 - m21 * b01 + m22 * b00) * det;\r\n\r\n        this.swapWithTmpMatrix();\r\n\r\n        return true;\r\n    }\r\n\r\n    public perspective(fovy: number, aspectRatio: number, nearPlane: number, farPlane: number): void {\r\n        const f = 1 / Math.tan(fovy / 2);\r\n\r\n        this._val[0] = f / aspectRatio;\r\n        this._val[1] = 0;\r\n        this._val[2] = 0;\r\n        this._val[3] = 0;\r\n        this._val[4] = 0;\r\n        this._val[5] = f;\r\n        this._val[6] = 0;\r\n        this._val[7] = 0;\r\n        this._val[8] = 0;\r\n        this._val[9] = 0;\r\n        this._val[11] = -1;\r\n        this._val[12] = 0;\r\n        this._val[13] = 0;\r\n        this._val[15] = 0;\r\n\r\n        if (farPlane === Infinity) {\r\n            this._val[10] = -1;\r\n            this._val[14] = -2 * nearPlane;\r\n        } else {\r\n            const tmp = 1 / (nearPlane - farPlane);\r\n            this._val[10] = (farPlane + nearPlane) * tmp;\r\n            this._val[14] = (2 * farPlane * nearPlane) * tmp;\r\n        }\r\n    }\r\n\r\n    public perspectiveInverse(fovy: number, aspectRatio: number, nearPlane: number, farPlane: number): void {\r\n        const f = Math.tan(fovy / 2);\r\n\r\n        this._val[0] = aspectRatio * f;\r\n        this._val[1] = 0;\r\n        this._val[2] = 0;\r\n        this._val[3] = 0;\r\n        this._val[4] = 0;\r\n        this._val[5] = f;\r\n        this._val[6] = 0;\r\n        this._val[7] = 0;\r\n        this._val[8] = 0;\r\n        this._val[9] = 0;\r\n        this._val[10] = 0;\r\n        this._val[12] = 0;\r\n        this._val[13] = 0;\r\n        this._val[14] = -1;\r\n\r\n        if (farPlane === Infinity) {\r\n            this._val[11] = -0.5;\r\n            this._val[15] = 0.5 / nearPlane;\r\n        } else {\r\n            const tmp = 0.5 / (nearPlane * farPlane);\r\n            this._val[11] = (nearPlane - farPlane) * tmp;\r\n            this._val[15] = (nearPlane + farPlane) * tmp;\r\n        }\r\n    }\r\n\r\n    private swapWithTmpMatrix(): void {\r\n        const tmp = Mat4.tmpMatrix._val;\r\n        Mat4.tmpMatrix._val = this._val;\r\n        this._val = tmp;\r\n    }\r\n}\r\n\r\nexport { Mat4 };\r\n"],"sourceRoot":""}